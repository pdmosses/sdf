/* module Colorer

// Baseline ESV errors on color references for some reason, disable import and use explicit colors.
// imports editor/Colorer.generated

colorer // Default, token-based highlighting

  keyword    : 127 0 85 bold
  identifier : _
  string     : 0 0 255
  number     : 0 128 0
  var        : 139 69 19 italic
  operator   : 0 0 128
  layout     : 63 127 95 italic

colorer

	_.String: 0 0 255
	_.Constructor: 0 0 128
	_.Lit: 0 0 255
	_.CiLit: 0 0 255
	Label._: 128 128 128

	_.PosRef: 0 128 0
	_.LabelRef: 128 128 128
	_.LiteralRef: 0 0 255

	Character._: 0 0 255
	Character.Regular: 0 128 0
	Character.Binary: 127 0 85
	Character.Octal: 127 0 85
	Character.Decimal: 127 0 85
	Character.Hexadecimal: 127 0 85 */
  
  
  https://github.com/metaborg/spoofax-eclipse/blob/master/org.metaborg.spoofax.eclipse.util/src/main/java/org/metaborg/spoofax/eclipse/util/StyleUtils.java


_.String: 0 0 255 // TemplateLang.sdf3: Template-CF
TemplatePart1-CF.String = TemplateString1-LEX
TemplatePart2-CF.String =  TemplateString2-LEX 


_.Constructor: 0 0 128

// Kernel.sdf3: 
Attribute.Constructor = <cons(<StrCon>)> {deprecated("Use 'Sort.Cons' notation instead")}
QuotedConstructor.Constructor = <<StrCon>>

// Sdf2.sdf3:
ATermAttribute.Constructor = <cons(<StrCon>)>{reject}

// TemplateLang.sdf3:
Constructor.Constructor = <<IdCon>>


_.Lit: 0 0 255
_.CiLit: 0 0 255

// Literals.sdf3: Symbol
Symbol.Lit = <<string:StrCon>>
Symbol.CiLit = <<ci-string:SingleQuotedStrCon>>

// Regular.sdf3:
Separator.Lit = <<StrCon>>


Label._: 128 128 128

// Labels.sdf3:
Label.Quoted = <<StrCon>>
Label.Unquoted = <<IdCon>>


_.PosRef: 0 128 0       
_.LiteralRef: 0 0 255
_.LabelRef: 128 128 128
// Layout-Constraints.sdf3: ConstraintTreeRef
ConstraintTreeRef.PosRef = NatCon
ConstraintTreeRef.LiteralRef = StrCon
ConstraintTreeRef.LabelRef = IdCon


Character._: 0 0 255
Character.Regular: 0 128 0
Character.Binary: 127 0 85
Character.Octal: 127 0 85
Character.Decimal: 127 0 85
Character.Hexadecimal: 127 0 85

// Character.sdf3:
Character-CF.Regular = RegularChar-LEX
Character-CF.Escaped = "\\" EscapedChar-LEX
Character-CF.Binary = "\\0b" BinChar-LEX
Character-CF.Octal = "\\0" OctChar-LEX
Character-CF.Decimal = "\\" NumChar-LEX
Character-CF.Hexadecimal = "\\0x" HexChar-LEX
Character.Bot = "\\BOT"
Character.Top = "\\TOP"
Character.LabelStart = "\\LABEL_START"






CSS: 

code .keyword {
  color: rgb(127 0 85); // bold
}

code .identifier {
  color: __text-color;
}

code .string {
  color: rgb(0 0 255);
}

code .number {
  color: rgb(0 128 0);
}

code .var {
  color: rgb(139 69 19); // italic
}

code .operator {
  color: rgb(0 0 128);
}

code .layout {
  color: rgb(63 127 95); // italic
}



code .cons_String {}

code .sort_Label {}

code .sort_Character.cons_Regular {}



--------


Def(
  URI(
    Language("TemplateLang"),
    [ID(NablNsConstructor,"Label",Unique("eclipse:///org.metaborg.meta.lang.template/syntax/labels/Labels.sdf3/0"))
    ,ID(NablNsModule,"labels/Labels",Unique("eclipse:///org.metaborg.meta.lang.template/syntax/labels/Labels.sdf3/0"))]
))

nabl-uri-name = "Label"


Def(
  URI(
    Language("TemplateLang"),
    [ID(NablNsSort,"IdCon",NonUnique)
    ,ID(NablNsModule,"constants/IdentifierCon",Unique("eclipse:///org.metaborg.meta.lang.template/syntax/constants/IdentifierCon.sdf3/0"))]))

nabl-uri-parent; nabl-uri-qualifier; 
